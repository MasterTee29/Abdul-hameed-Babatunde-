Explain what software engineering is and discuss its importance in the technology industry
Software engineering systematically applies engineering principle, methods and tools to develop and maintain high-quality software systems. Software engineering plays a critical role in the technology industry by ensuring the creation of high-quality, reliable, and efficient software solutions that meet the evolving needs of users and businesses. It provides a structured framework for software development that enhances productivity, innovation, and overall success in today's digital world.

Identify and describe at least three key milestones in the evolution of software engineering.
1. The development of programming languages. 2. The establishment of software engineering as a discipline in the 1960s. 3. The rise of agile methodologies in the 2000s.

List and briefly explain the phases of the Software Development Life Cycle.
1. Requirements. 2. Design. 3. Implementation. 4. Testing. 5. Deployment. 6. Maintenance.

Compare and contrast the Waterfall and Agile methodologies. Provide examples of scenarios where each would be appropriate.
Waterfall methodology uses sequential approach with distinct phases (e.g., requirements, design, implementation) flowing downwards like a waterfall WHILE agile methodology uses iterative and incremental approach focused on flexibility, collaboration, and responding to change.

Describe the roles and responsibilities of a Software Developer, a Quality Assurance Engineer, and a Project Manager in a software engineering team.
1. Software developer is responsible for writing code and implementing software solutions. 2. Quality Assurance engineer ensures software quality by designing and executing test plans. 3. Project manager oversees the planning, execution, and delivery of software projects.

Discuss the importance of Integrated Development Environments (IDEs) and Version Control Systems (VCS) in the software development process. Give examples of each.
Integrated Development Environments are software suites that provide comprehensive tools for writing, debugging and testing code. Example; Visual studio, Eclipse, Intelligence IDEA
Version control systems are software tools for tracking changes to source code and coordinating work among team members. Example; Git, Subversion 

What are some common challenges faced by software engineers? Provide strategies to overcome these challenges.
1. Changing requirements . 2. Tight deadlines. 3. Technical debt.
Strategies to overcome these challenges include; 1. Effective communication. 2. agile methodologies. 3. regular reassessment of project goals and timelines.

Explain the different types of testing (unit, integration, system, and acceptance) and their importance in software quality assurance.
Unit testing: Testing individual components or modules of software.  Unit testing helps identify bugs early in the development process, ensuring that each unit behaves as expected independently of the rest of the application.
Integration testing: Testing interactions between different components or subsystems.  Integration testing ensures that interactions between integrated components are functioning correctly and that data communication between different units is handled properly.
System testing: Testing the entire software system as a whole.   System testing validates the entire system against the functional and non-functional requirements. It tests end-to-end scenarios, user interactions, and ensures that the software performs as expected in different environments.
Acceptance testing: Testing the software against user requirements to ensure it meets user needs.   Acceptance testing involves stakeholders (end-users, customers, or clients) testing the software in a realistic environment to confirm that it meets their expectations and is ready for deployment.
